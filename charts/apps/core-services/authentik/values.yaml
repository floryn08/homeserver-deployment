namespace: core-services
authentik:
  authentik:
    log_level: trace
    secret_key: <path:kv/data/core-services/authentik#SECRET_KEY>
    postgresql:
      name: authentik
      host: postgres-loadbalancer.core-services.svc
      port: 5432
      user: <path:kv/data/core-services/authentik#POSTGRES_USER>
      password: <path:kv/data/core-services/authentik#POSTGRES_PASSWORD>
    # redis:
    #   host: redis-loadbalancer.core-services.svc

    email:
      # -- SMTP Server emails are sent from, fully optional
      host: <path:kv/data/core-services/authentik#SMTP_HOST>
      port: 587
      # -- SMTP credentials. When left empty, no authentication will be done.
      username: <path:kv/data/core-services/authentik#SMTP_USER>
      # -- SMTP credentials. When left empty, no authentication will be done.
      password: <path:kv/data/core-services/authentik#SMTP_PASSWORD>
      # -- Enable either use_tls or use_ssl. They can't be enabled at the same time.
      use_tls: false
      # -- Enable either use_tls or use_ssl. They can't be enabled at the same time.
      use_ssl: false
      # -- Connection timeout in seconds
      timeout: 30
      # -- Email 'from' address can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
      from: <path:kv/data/core-services/authentik#SMTP_USER>

  server:
    ingress:
      enabled: true
      https: false
      ingressClassName: traefik
      hosts:
        - auth.<path:kv/data/domains#primaryDomain>
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    containerPorts:
      http: 8094
      https: 8095
    service:
      type: LoadBalancer
      servicePortHttp: 8094
      servicePortHttps: 8095

  postgresql:
    enabled: false

  redis:
    enabled: true