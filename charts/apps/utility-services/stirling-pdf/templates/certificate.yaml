{{- if .Values.ingress.hostFromSecret.enabled }}
  {{- $s := lookup "v1" "Secret" .Values.ingress.hostFromSecret.namespace .Values.ingress.hostFromSecret.name | default dict }}
  {{- $hasData := hasKey $s "data" }}
  {{- if and $hasData (hasKey $s.data .Values.ingress.hostFromSecret.key) }}
    {{- $hostB64 := index $s.data .Values.ingress.hostFromSecret.key }}
    {{- $host := $hostB64 | b64dec }}

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name }}-certificate
  namespace: {{ .Values.namespace }}
spec:
  revisionHistoryLimit: 1
  secretName: {{ .Release.Name }}-certificate-secret
  issuerRef: 
    kind: ClusterIssuer
    name: ca-issuer
  commonName: "{{ .Release.Name }}.{{ $host }}"
  dnsNames:
    - "{{ .Release.Name }}.{{ $host }}"
  subject:
    organizations:      
      - {{ $host }}
    organizationalUnits:
      - {{ .Values.namespace }}

  {{- else }}
    {{- fail (printf "Secret '%s' in namespace '%s' is missing or does not contain key '%s'" .Values.ingress.hostFromSecret.name .Values.ingress.hostFromSecret.namespace .Values.ingress.hostFromSecret.key) }}
  {{- end }}
{{- end }}
