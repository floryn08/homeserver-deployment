# https://github.com/immich-app/immich-charts/blob/main/charts/immich/values.yaml
immichDataPath: <path:kv/data/hostPath#storageHdd>/immich/library
immichPostgresDataPath: <path:kv/data/hostPath#appdata>/media-management/immich/postgres
namespace: media-management
localDomain: <path:kv/data/domains#localDomain>

immich:
  env:
    DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
    DB_USERNAME: immich
    DB_DATABASE_NAME: immich
    # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
    DB_PASSWORD: <path:kv/data/media-management/immich#postgres-password>

  immich:
    persistence:
      library:
        existingClaim: immich-data-pvc
  redis:
    enabled: true
  server:
    probes:
      startup:
        spec:
          failureThreshold: 360
    image:
      repository: ghcr.io/immich-app/immich-server
      tag: v1.128.0
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        hosts:
          - host: immich.<path:kv/data/domains#primaryDomain>
            paths:
              - path: "/"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt

      local:
        enabled: true
        ingressClassName: traefik
        hosts:
          - host: immich.<path:kv/data/domains#localDomain>
            paths:
              - path: "/"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
        tls:
          - secretName: immich-certificate-secret

    persistence:
      external:
        enabled: true
        type: hostPath
        hostPath: <path:kv/data/hostPath#storageHdd>/GooglePhotosExport

  machine-learning:
    image:  
      repository: ghcr.io/immich-app/immich-machine-learning
      tag: v1.128.0

postgresql:
  image:
    repository: tensorchord/pgvecto-rs
    tag: pg14-v0.2.0
  primary:
    persistence:
      storageClass: manual
      existingClaim: immich-postgres-data-pvc
    containerSecurityContext:
      readOnlyRootFilesystem: false
    resourcesPreset: large
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
  global:
    security:
      allowInsecureImages: true
    postgresql:
      auth:
        username: immich
        database: immich
        password: <path:kv/data/media-management/immich#postgres-password>
        postgresPassword: <path:kv/data/media-management/immich#postgres-password>
