apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-account
      volumes:
      {{- range $index, $val := $.Values.volumes }}
      - name: {{ $val.name }}
        hostPath:
          path: {{ $val.hostPath }}
          type: DirectoryOrCreate
      {{ end -}}
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        args:
        - --log.level=DEBUG
        - --ping=true
        - --api.insecure
        - --providers.kubernetesingress
        - --providers.kubernetesingress.ingressendpoint.publishedservice={{ .Release.Namespace }}/{{ .Release.Name }}-service
        - --entrypoints.web.address=:80
        - --entrypoints.websecure.address=:443
        - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
        - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
        - --certificatesresolvers.letsencrypt.acme.email=florin.vasilica95@gmail.com
        - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
        ports:
        {{- range $key, $val := $.Values.ports }}
        - containerPort: {{ $val.containerPort }}
          name: {{ $val.name }}-port
          protocol: {{ $val.protocol }}
        {{ end -}}
        volumeMounts:
        {{- range $index, $val := $.Values.volumes }}
        - mountPath: {{ $val.podPath }}
          name: {{ $val.name }}
        {{ end -}}
